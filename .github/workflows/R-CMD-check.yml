# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R-CMD-check

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true
      matrix:
        config:
          - {os: ubuntu-20.04, r-version: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04, r-version: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up R ${{ matrix.config.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r-version }}
          
      - name: Install remotes
        run: >
          Rscript
          -e "if (system.file(package = 'remotes') == '') install.packages('remotes')"
          
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "20.04"), sep = "\n")')
          
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}
        
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}
