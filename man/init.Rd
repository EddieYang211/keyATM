% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{init}
\alias{init}
\title{Initialize a model}
\usage{
init(files, dict, extra_k = 1, encoding = "unknown", ...)
}
\arguments{
\item{files}{Names of files to process}

\item{dict}{a quanteda dictionary or named list of character vectors}

\item{extra_k}{number of unseeded topics in addition to the topics seeded by
\code{dict}}

\item{encoding}{File encoding (defaults to \code{readLines}'s default)}

\item{...}{Additional arguments to \code{quanteda::tokens}. (Only lowercasing
happens by default).}
}
\value{
A list containing \describe{
        \item{W}{a list of vectors of word indexes}
        \item{Z}{a list of vectors of topic indicators isomorphic to W},
        \item{X}{a list of vectors of seed indicators (0/1) isomorphic to W}
        \item{vocab}{a vector of vocabulary items}
        \item{files}{a vector of document filenames}
        \item{dict}{a tokenized version of the dictionary}
        \item{seeds}{a list of words for the seed words in dict, named by dictionary category}
        }.
}
\description{
This function creates a list of word indexes W, topic indicators Z, seed indicators X,
a vocabulary list \code{vocab} from \code{files}.
}
\details{
\code{Z} represents which topic a word topken was generated by.  It is initialized randomly
from \code{length(dict) + extra_k} topics, except when \code{dict}
assigns a word to a particular category, in which case this topic indicator is assigned.
For example, if a word appears in the second category of \code{dict} it will always be initialized
as 1.

\code{X} is 1 when a word is generated from one of the topics from the dictionary ('seeded')
and 0 when it was generated from one of the \code{extra_k} normal topics.
\code{X} is initialized randomly except when the word is contained in
\code{dict}.

Note that all indicators are zero-based for ease of later processing in C++,
so \code{mod$vocab[mod$W + 1]} recovers the (tokenized) words of the i-th
document from model \code{mod}.
}
